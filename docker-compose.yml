version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: telegram-bot-postgres
    environment:
      POSTGRES_DB: telegram_bot_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - telegram-bot-network

  redis:
    image: redis:7-alpine
    container_name: telegram-bot-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - telegram-bot-network

  backend:
    build:
      context: .
      dockerfile: apps/backend/Dockerfile
      target: development
    container_name: telegram-bot-backend
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://postgres:postgres123@postgres:5432/telegram_bot_db
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-jwt-secret-key
      TELEGRAM_BOT_TOKEN: your-telegram-bot-token
    ports:
      - "3001:3001"
    volumes:
      - ./apps/backend:/app/apps/backend
      - ./packages:/app/packages
      - /app/node_modules
      - /app/apps/backend/node_modules
    depends_on:
      - postgres
      - redis
    networks:
      - telegram-bot-network
    command: npm run start:dev

  frontend:
    build:
      context: .
      dockerfile: apps/frontend/Dockerfile
      target: development
    container_name: telegram-bot-frontend
    environment:
      NODE_ENV: development
      VITE_API_URL: http://localhost:3001
    ports:
      - "3000:3000"
    volumes:
      - ./apps/frontend:/app/apps/frontend
      - ./packages:/app/packages
      - /app/node_modules
      - /app/apps/frontend/node_modules
    depends_on:
      - backend
    networks:
      - telegram-bot-network
    command: npm run dev

volumes:
  postgres_data:
  redis_data:

networks:
  telegram-bot-network:
    driver: bridge
